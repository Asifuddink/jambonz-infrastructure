#!/bin/bash
ENABLE_DATADOG_METRICS=0
if [ "${DATADOG_API_KEY}" ] ; then
  ENABLE_DATADOG_METRICS=1
fi

echo "running jambonz user data script"

echo "writing /home/admin/apps/ecosystem.config.js.."

cat << EOF > /home/admin/apps/ecosystem.config.js
module.exports = {
  apps : [
  {
    name: 'jambonz-feature-server',
    cwd: '/home/admin/apps/jambonz-feature-server',
    script: 'app.js',
    instance_var: 'INSTANCE_ID',
    out_file: '/home/admin/.pm2/logs/jambonz-feature-server.log',
    err_file: '/home/admin/.pm2/logs/jambonz-feature-server.log',
    exec_mode: 'fork',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      GOOGLE_APPLICATION_CREDENTIALS: '/home/admin/credentials/gcp.json',
      AWS_ACCESS_KEY_ID: '${AWS_ACCESS_KEY_ID}',
      AWS_SECRET_ACCESS_KEY: '${AWS_SECRET_ACCESS_KEY}',
      AWS_REGION: '${AWS_REGION}',
      AWS_SNS_TOPIC_ARM: '${AWS_SNS_TOPIC_ARN}',
      ENABLE_DATADOG_METRICS: $ENABLE_DATADOG_METRICS,
      JAMBONES_NETWORK_CIDR: '${VPC_CIDR}',
      JAMBONES_MYSQL_HOST: '${JAMBONES_MYSQL_HOST}',
      JAMBONES_MYSQL_USER: '${JAMBONES_MYSQL_USER}',
      JAMBONES_MYSQL_PASSWORD: '${JAMBONES_MYSQL_PASSWORD}',
      JAMBONES_MYSQL_DATABASE: 'jambones',
      JAMBONES_MYSQL_CONNECTION_LIMIT: 10,
      JAMBONES_REDIS_HOST: '${JAMBONES_REDIS_HOST}',
      JAMBONES_REDIS_PORT: 6379,
      JAMBONES_LOGLEVEL: 'debug',
      HTTP_PORT: 3000,
      DRACHTIO_HOST: '127.0.0.1',
      DRACHTIO_PORT: 9022,
      DRACHTIO_SECRET: 'cymru',
      JAMBONES_SBCS: '${JAMBONES_SBC_SIP_IPS}',
      JAMBONES_FEATURE_SERVERS: '127.0.0.1:9022:cymru',
      JAMBONES_FREESWITCH: '127.0.0.1:8021:JambonzR0ck$'
    }
  }]
};
EOF
cat << EOF > /home/admin/credentials/gcp.json
${GCP_CREDENTIALS}
EOF

echo "finished writing config file"

sudo -u admin bash -c "pm2 delete /home/admin/apps/ecosystem.config.js"
sudo -u admin bash -c "pm2 start /home/admin/apps/ecosystem.config.js"

# install datadog if a datadog api key was provided
if [ "${DATADOG_API_KEY}" ] ; then
  echo "installing datadog.."

  sed -i -e 's@^api_key:.*@'"api_key: ${DATADOG_API_KEY}"'@g' /etc/datadog-agent/datadog.yaml
  sed -i -e 's@^# site:.*@'"site: ${DATADOG_SITE}"'@g' /etc/datadog-agent/datadog.yaml
  sed -i -e 's@^# log_level:.*@log_level: warning@g' /etc/datadog-agent/datadog.yaml

  tee -a /etc/datadog-agent/datadog.yaml > /dev/null <<EOT
tags:
  env_name:${DATADOG_ENV_NAME}
  role:fs
EOT

  systemctl enable datadog-agent
  systemctl restart datadog-agent
fi

echo "user data script completed"
